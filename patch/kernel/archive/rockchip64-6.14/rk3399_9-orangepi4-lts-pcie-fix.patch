From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: John Doe <john.doe@somewhere.on.planet>
Date: Wed, 28 May 2025 07:18:07 +0000
Subject: Patching kernel rockchip64 files
 drivers/pci/controller/pcie-rockchip-host.c
 drivers/pci/controller/pcie-rockchip.c drivers/pci/controller/pcie-rockchip.h

Signed-off-by: John Doe <john.doe@somewhere.on.planet>
---
 drivers/pci/controller/pcie-rockchip-host.c | 4 ++++
 drivers/pci/controller/pcie-rockchip.c      | 6 ++++++
 drivers/pci/controller/pcie-rockchip.h      | 1 +
 3 files changed, 11 insertions(+)

diff --git a/drivers/pci/controller/pcie-rockchip-host.c b/drivers/pci/controller/pcie-rockchip-host.c
index f788d5dc3..4fc332e9d 100644
--- a/drivers/pci/controller/pcie-rockchip-host.c
+++ b/drivers/pci/controller/pcie-rockchip-host.c
@@ -297,10 +297,12 @@ static int rockchip_pcie_host_init_port(struct rockchip_pcie *rockchip)
 	struct device *dev = rockchip->dev;
 	int err, i = MAX_LANE_NUM;
 	u32 status;
 
 	gpiod_set_value_cansleep(rockchip->perst_gpio, 0);
+	gpiod_set_value_cansleep(rockchip->perst_custom_gpio, 0);
+	dev_info(dev, "[28.05.2025] Set old PERST (GPIO %d) and new PERST (GPIO %d) to 0", desc_to_gpio(rockchip->perst_gpio), desc_to_gpio(rockchip->perst_custom_gpio));
 
 	err = rockchip_pcie_init_port(rockchip);
 	if (err)
 		return err;
 
@@ -326,10 +328,12 @@ static int rockchip_pcie_host_init_port(struct rockchip_pcie *rockchip)
 	rockchip_pcie_write(rockchip, PCIE_CLIENT_LINK_TRAIN_ENABLE,
 			    PCIE_CLIENT_CONFIG);
 
 	msleep(PCIE_T_PVPERL_MS);
 	gpiod_set_value_cansleep(rockchip->perst_gpio, 1);
+	gpiod_set_value_cansleep(rockchip->perst_custom_gpio, 1);
+	dev_info(dev, "[28.05.2025] Set old PERST (GPIO %d) and new PERST (GPIO %d) to 1", desc_to_gpio(rockchip->perst_gpio), desc_to_gpio(rockchip->perst_custom_gpio));
 
 	msleep(PCIE_T_RRS_READY_MS);
 
 	/* 500ms timeout value should be enough for Gen1/2 training */
 	err = readl_poll_timeout(rockchip->apb_base + PCIE_CLIENT_BASIC_STATUS1,
diff --git a/drivers/pci/controller/pcie-rockchip.c b/drivers/pci/controller/pcie-rockchip.c
index 0545da3ee..bd4464938 100644
--- a/drivers/pci/controller/pcie-rockchip.c
+++ b/drivers/pci/controller/pcie-rockchip.c
@@ -95,10 +95,16 @@ int rockchip_pcie_parse_dt(struct rockchip_pcie *rockchip)
 							       GPIOD_IN);
 	if (IS_ERR(rockchip->perst_gpio))
 		return dev_err_probe(dev, PTR_ERR(rockchip->perst_gpio),
 				     "failed to get PERST# GPIO\n");
 
+	rockchip->perst_custom_gpio = devm_gpiod_get_optional(dev, "perst-custom",
+							      GPIOD_OUT_LOW);
+	if (IS_ERR(rockchip->perst_custom_gpio))
+		return dev_err_probe(dev, PTR_ERR(rockchip->perst_custom_gpio),
+				     "failed to get PERST-CUSTOM# GPIO\n");
+
 	rockchip->num_clks = devm_clk_bulk_get_all(dev, &rockchip->clks);
 	if (rockchip->num_clks < 0)
 		return dev_err_probe(dev, rockchip->num_clks,
 				     "failed to get clocks\n");
 
diff --git a/drivers/pci/controller/pcie-rockchip.h b/drivers/pci/controller/pcie-rockchip.h
index ef34c096c..662a1a9e7 100644
--- a/drivers/pci/controller/pcie-rockchip.h
+++ b/drivers/pci/controller/pcie-rockchip.h
@@ -338,10 +338,11 @@ struct rockchip_pcie {
 	struct	regulator *vpcie12v; /* 12V power supply */
 	struct	regulator *vpcie3v3; /* 3.3V power supply */
 	struct	regulator *vpcie1v8; /* 1.8V power supply */
 	struct	regulator *vpcie0v9; /* 0.9V power supply */
 	struct	gpio_desc *perst_gpio;
+	struct	gpio_desc *perst_custom_gpio;
 	u32	lanes;
 	u8      lanes_map;
 	int	link_gen;
 	struct	device *dev;
 	struct	irq_domain *irq_domain;
-- 
Created with Armbian build tools https://github.com/armbian/build

